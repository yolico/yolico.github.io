{"meta":{"title":"yolico","subtitle":"","description":"","author":"John Doe","url":"http://yoursite.com","root":"/"},"pages":[{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2020-04-28T11:25:32.092Z","comments":true,"path":"comment/index.html","permalink":"http://yoursite.com/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2020-04-28T11:25:32.093Z","comments":false,"path":"donate/index.html","permalink":"http://yoursite.com/donate/index.html","excerpt":"","text":""},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2020-04-29T08:24:48.111Z","comments":false,"path":"lab/index.html","permalink":"http://yoursite.com/lab/index.html","excerpt":"","text":"sakura主题Sakura"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2020-04-29T08:35:35.295Z","comments":true,"path":"links/index.html","permalink":"http://yoursite.com/links/index.html","excerpt":"","text":""},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2020-05-02T04:38:59.777Z","comments":false,"path":"music/index.html","permalink":"http://yoursite.com/music/index.html","excerpt":"","text":""},{"title":"picture","date":"2020-04-29T08:13:39.000Z","updated":"2020-06-08T03:59:08.110Z","comments":false,"path":"picture/index.html","permalink":"http://yoursite.com/picture/index.html","excerpt":"","text":""},{"title":"resources","date":"2020-04-29T08:13:39.000Z","updated":"2020-04-29T08:13:39.212Z","comments":false,"path":"resources/index.html","permalink":"http://yoursite.com/resources/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2020-04-28T11:25:32.098Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2020-04-28T11:25:32.099Z","comments":false,"path":"theme-sakura/index.html","permalink":"http://yoursite.com/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2020-04-28T11:25:32.100Z","comments":false,"path":"video/index.html","permalink":"http://yoursite.com/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2020-06-10T09:25:31.950Z","comments":false,"path":"bangumi/index.html","permalink":"http://yoursite.com/bangumi/index.html","excerpt":"","text":""},{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2020-04-28T13:59:28.659Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"[夜子] 与&nbsp; yolico&nbsp; （ 夜子 ） 对话中... bot_ui_ini()"}],"posts":[{"title":"vue考试答题卡","slug":"vue考试答题卡","date":"2020-07-21T09:08:25.000Z","updated":"2020-07-21T09:17:19.172Z","comments":true,"path":"2020/07/21/vue考试答题卡/","link":"","permalink":"http://yoursite.com/2020/07/21/vue%E8%80%83%E8%AF%95%E7%AD%94%E9%A2%98%E5%8D%A1/","excerpt":"","text":"还是一样先上代码,具体在代码中有注释html部分 &lt;template&gt; &lt;d2-container&gt; &lt;div class=&quot;content&quot;&gt; &lt;!-- 基本信息区域 --&gt; &lt;div class=&quot;title&quot;&gt;答题&lt;/div&gt; &lt;div class=&quot;little-title&quot; v-if=&quot;showSub &lt; Slength + 1&quot;&gt;文字单选题( {{showSub}}/{{Slength}} ｜ 共{{Slength}}题 )&lt;span&gt;用时：00:00:{{time1}}&lt;/span&gt;&lt;/div&gt; &lt;div class=&quot;little-title&quot; v-else-if=&quot;showSub - Slength &lt; Mlength + 1&quot;&gt;文字多选题( {{showSub - Slength}}/{{Mlength}} ｜ 共{{Mlength}}题 )&lt;span&gt;用时：00:00:{{time1}}&lt;/span&gt;&lt;/div&gt; &lt;div class=&quot;little-title&quot; v-else-if=&quot;showSub - Slength - Mlength&lt; Rlength + 1&quot;&gt;判断题( {{showSub - Slength - Mlength}}/{{Rlength}} ｜ 共{{Rlength}}题 )&lt;span&gt;用时：00:00:{{time1}}&lt;/span&gt;&lt;/div&gt; &lt;!-- 题目区域 --&gt; &lt;div class=&quot;main&quot;&gt; &lt;!-- 题目区域 --&gt; &lt;div class=&quot;subject&quot;&gt; &lt;!-- 单选题 --&gt; &lt;ul v-if=&quot;showSub &lt; Slength + 1&quot;&gt; &lt;li v-for=&quot;(sitem , index) in single&quot; :key=&quot;index&quot; v-if=&quot;showSub === index + 1&quot;&gt; &lt;div class=&quot;subject-title&quot;&gt; {{index + 1}} , {{sitem.content}} ( ) &lt;/div&gt; &lt;el-radio-group v-model=&quot;sitem.own&quot; class=&quot;subject-select&quot;&gt; &lt;el-radio :label=&quot;s.option&quot; v-for=&quot;(s ,index) in sitem.options&quot; :key=&quot;index&quot;&gt;{{s.option}}. {{s.content}}&lt;/el-radio&gt; &lt;/el-radio-group&gt; &lt;/li&gt; &lt;/ul&gt; &lt;!-- 多选题 --&gt; &lt;ul v-else-if=&quot;showSub - Slength &lt; Mlength + 1&quot;&gt; &lt;li v-for=&quot;(mitem , index) in multiple&quot; :key=&quot;index&quot; v-if=&quot;showSub - Slength === index + 1&quot;&gt; &lt;div class=&quot;subject-title&quot;&gt; {{index + 1}} , {{mitem.content}} ( ) &lt;/div&gt; &lt;!-- &lt;el-radio-group v-model=&quot;radio&quot; class=&quot;subject-select&quot;&gt; &lt;el-radio v-model=&quot;radio&quot; :label=&quot;m.id&quot; v-for=&quot;(m ,index) in mitem.optionLists&quot; :key=&quot;index&quot;&gt;{{m.option}}. {{m.content}}&lt;/el-radio&gt; &lt;/el-radio-group&gt; --&gt; &lt;el-checkbox-group v-model=&quot;mitem.own&quot; class=&quot;subject-select&quot; @change=&quot;Msbtn(mitem.id)&quot;&gt; &lt;el-checkbox :label=&quot;m.option&quot; v-for=&quot;(m ,index) in mitem.options&quot; :key=&quot;index&quot;&gt;{{m.option}}. {{m.content}}&lt;/el-checkbox&gt; &lt;/el-checkbox-group&gt; &lt;/li&gt; &lt;/ul&gt; &lt;!-- 判断题 --&gt; &lt;ul v-else-if=&quot;showSub - Slength - Mlength &lt; Rlength + 1&quot;&gt; &lt;li v-for=&quot;(ritem , index) in recognized&quot; :key=&quot;index&quot; v-if=&quot;showSub - Slength - Mlength === index + 1&quot;&gt; &lt;div class=&quot;subject-title&quot;&gt; {{index + 1}} , {{ritem.content}} ( ) &lt;/div&gt; &lt;el-radio-group v-model=&quot;ritem.own&quot; class=&quot;subject-select&quot; @change=&quot;Rsbtn(ritem.id)&quot;&gt; &lt;el-radio label=&quot;0&quot;&gt;错误&lt;/el-radio&gt; &lt;el-radio label=&quot;1&quot;&gt;正确&lt;/el-radio&gt; &lt;/el-radio-group&gt; &lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;btn&quot;&gt; &lt;el-button class=&quot;left&quot; type=&quot;primary&quot; @click=&quot;lastTime&quot; v-if=&quot;showSub &gt; 1&quot;&gt;上一题&lt;/el-button&gt; &lt;el-button class=&quot;right&quot; type=&quot;primary&quot; @click=&quot;anotherTime&quot; v-if=&quot;showSub - Slength - Mlength - Rlength &lt; 0&quot;&gt;下一题&lt;/el-button&gt; &lt;/div&gt; &lt;/div&gt; &lt;!-- 答题卡区域 --&gt; &lt;div class=&quot;answerSheet&quot;&gt; &lt;div class=&quot;singleChoiceBox&quot;&gt; &lt;div class=&quot;answerTitle&quot;&gt;单选题&lt;/div&gt; &lt;ul&gt; &lt;!-- :style=&quot;{ &apos;backgroundColor&apos;:single[item].own ? &apos;blue&apos;:&apos;&apos;}&quot; --&gt; &lt;li class=&quot;itm&quot; v-for=&quot;item in Slength&quot; :key=&quot;item&quot; @click=&quot;sBtn(item)&quot; :style=&quot;{ &apos;backgroundColor&apos; : single[item - 1].own ? &apos;skyblue&apos;:&apos;&apos;}&quot;&gt;{{item}}&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;multipleChoiceBox&quot;&gt; &lt;div class=&quot;answerTitle&quot;&gt;多选题&lt;/div&gt; &lt;ul&gt; &lt;li class=&quot;itm&quot; v-for=&quot;item in Mlength&quot; :key=&quot;item&quot; @click=&quot;mBtn(item)&quot; :style=&quot;{ &apos;backgroundColor&apos; : multiple[item - 1].own.length ? &apos;skyblue&apos;:&apos;&apos;}&quot;&gt;{{item}}&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;recognizedChoiceBox&quot;&gt; &lt;div class=&quot;answerTitle&quot;&gt;判断题&lt;/div&gt; &lt;ul&gt; &lt;li class=&quot;itm&quot; v-for=&quot;item in Rlength&quot; :key=&quot;item&quot; @click=&quot;rBtn(item)&quot; :style=&quot;{ &apos;backgroundColor&apos; : recognized[item - 1].own ? &apos;skyblue&apos;:&apos;&apos;}&quot;&gt;{{item}}&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;!-- 交卷 --&gt; &lt;div class=&quot;handin&quot;&gt; &lt;el-button type=&quot;primary&quot; @click=&quot;handin&quot;&gt;交卷&lt;/el-button&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/d2-container&gt; &lt;/template&gt;js部分 export default { name: &apos;test&apos;, data () { return { // 题目显示 showSub: 1, // 多选题 multiple: [], Mlength: &apos;&apos;, // 单选题 single: [], Slength: &apos;&apos;, // 判断题 recognized: [], Rlength: &apos;&apos;, // 提交的答案 lists: [] } }, computed: { ...mapState(&apos;d2admin&apos;, { // 考试订单id exId: state =&gt; state.exam.exId, // 考试课程id coId: state =&gt; state.exam.coId }) }, created () { // this.countDown() this.getTM() }, methods: { ...mapMutations(&apos;d2admin/exam&apos;, [ &apos;savePostId&apos; ]), // 倒计时 countDown () { let that = this this.timer = setInterval(() =&gt; { that.time1-- if (that.time1 &lt; 1) { // alert(&apos;您的答题时间已到,现在为您进入下一题&apos;) clearInterval(that.timer) } }, 1000) }, // 交卷 handin () { // 处理单选题 this.single.map(stm =&gt; { let sobj = {} sobj.answer = stm.own sobj.id = stm.id this.lists.push(sobj) }) // 处理多选题 this.multiple.map(mtm =&gt; { let mobj = {} mobj.answer = mtm.own.join() mobj.id = mtm.id this.lists.push(mobj) }) // 处理判断题 this.recognized.map(rtm =&gt; { let robj = {} robj.answer = rtm.own robj.id = rtm.id this.lists.push(robj) }) sendTest({ courseInfoId: this.coId, lists: this.lists, orderId: this.exId }).then(res =&gt; { if (res.code === 0) { this.savePostId(res.data) this.$emit(&apos;toHandin&apos;) } }).catch(() =&gt; { return false }) }, // 初始化题目(主要在于处理后端返回的数据格式,将其处理成适合渲染题目格式的数据结构) getTM () { getTest(this.coId).then(res =&gt; { if (res.code === 0) { // 处理多选 this.Mlength = res.data.multipleChoice.length res.data.multipleChoice.map((item, index) =&gt; { let obj = {} // 题目id obj.id = item.id // 题目内容 obj.content = item.content // 选项 obj.options = item.optionLists // 选中的答案 obj.own = [] // 题目类型 obj.type = &apos;m&apos; this.multiple.push(obj) }) // 处理单选 this.Slength = res.data.singleChoice.length res.data.singleChoice.map((item, index) =&gt; { let obj = {} // 题目id obj.id = item.id // 题目内容 obj.content = item.content // 选项 obj.options = item.optionLists // 选中的答案 obj.own = &apos;&apos; // 题目类型 obj.type = &apos;s&apos; this.single.push(obj) }) // 处理判断 this.Rlength = res.data.recognizedChoice.length res.data.recognizedChoice.map((item, index) =&gt; { let obj = {} // 题目id obj.id = item.id // 题目内容 obj.content = item.content // 选项 obj.options = item.optionLists // 选中的答案 obj.own = &apos;&apos; // 题目类型 obj.type = &apos;r&apos; this.recognized.push(obj) }) } }).catch(() =&gt; { return false }) }, // 单选题答案 Ssbtn (sum) { this.testId = sum }, // 多选题答案 Msbtn (mum) { this.testId = mum }, // 判断题答案 Rsbtn (rum) { this.testId = rum }, // 上一题 lastTime () { this.showSub-- }, // 下一题 anotherTime () { this.showSub++ }, // 答题卡相关跳转 sBtn (s) { this.showSub = s }, mBtn (m) { this.showSub = m + this.Slength }, rBtn (r) { this.showSub = r + this.Slength + this.Mlength } } }css部分 &lt;style lang=&quot;scss&quot; scoped&gt; .content { padding: 30px; .title { font-size: 20px; font-weight: 700; } .little-title { margin-top: 30px; span { margin-left: 50px; } } .main { display: flex; .subject { flex: 1; display: flex; flex-direction: column; position: relative; ul { // flex: 1; // height: 90%; li { .subject-title { padding: 20px 0; } .el-radio-group, .el-checkbox-group { display: flex; flex-direction: column; .el-radio, .el-checkbox { padding: 10px 0; } } } } .btn { // height: 20%; // width: 20%; position: absolute; // flex: 1; bottom: -60px; // display: flex; // justify-content: center; .left { float: left; } .right { float: right; } } } .answerSheet { width: 35%; display: flex; flex-direction: column; // 单选题答题卡 .multipleChoiceBox { .answerTitle { font-size: 18px; margin-left: 5px; } ul { flex: 1; display: flex; flex-wrap: wrap; .itm { margin: 5px; width: 30px; height: 30px; border: 1px solid #ccc; text-align: center; line-height: 30px; cursor: pointer; } } } // 多选题答题卡 .recognizedChoiceBox { .answerTitle { font-size: 18px; margin-left: 5px; } ul { flex: 1; display: flex; flex-wrap: wrap; .itm { margin: 5px; width: 30px; height: 30px; border: 1px solid #ccc; text-align: center; line-height: 30px; cursor: pointer; } } } // 判断题答题卡 .singleChoiceBox { .answerTitle { font-size: 18px; margin-left: 5px; } ul { flex: 1; display: flex; flex-wrap: wrap; .itm { margin: 5px; width: 30px; height: 30px; border: 1px solid #ccc; text-align: center; line-height: 30px; cursor: pointer; } } } .handin { margin-top: 20px; } } } } &lt;/style&gt;","categories":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[],"author":"yolico"},{"title":"vue调用pc摄像头完成拍照并上传","slug":"vue调用pc摄像头完成拍照并上传","date":"2020-07-21T08:28:52.000Z","updated":"2020-07-21T09:05:26.012Z","comments":true,"path":"2020/07/21/vue调用pc摄像头完成拍照并上传/","link":"","permalink":"http://yoursite.com/2020/07/21/vue%E8%B0%83%E7%94%A8pc%E6%91%84%E5%83%8F%E5%A4%B4%E5%AE%8C%E6%88%90%E6%8B%8D%E7%85%A7%E5%B9%B6%E4%B8%8A%E4%BC%A0/","excerpt":"","text":"话不多说,直接上代码html部分 &lt;template&gt; &lt;div class=&quot;curriculum-photo&quot;&gt; &lt;div class=&quot;header&quot;&gt; &lt;el-button size=&quot;mini&quot; @click=&quot;toBack&quot;&gt;返回&lt;/el-button&gt; &lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;!--canvas截取流--&gt; &lt;canvas ref=&quot;canvas&quot; width=&quot;700&quot; height=&quot;600&quot;&gt;&lt;/canvas&gt; &lt;!--图片展示--&gt; &lt;video ref=&quot;video&quot; :class=&quot;isPhoto ? &apos;isPhoto&apos; : &apos;&apos;&quot; width=&quot;700&quot; height=&quot;600&quot; autoplay&gt;&lt;/video&gt; &lt;div class=&quot;sub-btn&quot;&gt; &lt;el-button size=&quot;mini&quot; type=&quot;primary&quot; @click=&quot;photograph&quot;&gt;拍照&lt;/el-button&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/template&gt;js部分 callCamera () { // H5调用电脑摄像头API // navigator.mediaDevices.getUserMedia navigator.mediaDevices.getUserMedia({ video: true }).then(success =&gt; { // 摄像头开启成功 this.$refs[&apos;video&apos;].srcObject = success // 实时拍照效果 this.$refs[&apos;video&apos;].play() }).catch(() =&gt; { this.$alert(&apos;请使用具备摄像头功能设备进行观看&apos;, &apos;提示&apos;, { confirmButtonText: &apos;确定&apos;, showClose: false, callback: action =&gt; { this.toBack() } }) }) // 拍照 photograph () { // 降低video层级 this.isPhoto = true let ctx = this.$refs[&apos;canvas&apos;].getContext(&apos;2d&apos;) // 把当前视频帧内容渲染到canvas上 ctx.drawImage(this.$refs[&apos;video&apos;], 0, 0, 700, 600) // 转base64格式、图片格式转换、图片质量压缩 let imgBase64 = this.$refs[&apos;canvas&apos;].toDataURL(&apos;image/jpeg&apos;, 1) // 由字节转换为KB 判断大小 let str = imgBase64.replace(&apos;data:image/jpeg;base64,&apos;, &apos;&apos;) // let strLength = str.length // let fileLength = parseInt(strLength - (strLength / 8) * 2) // console.log(str) // 图片尺寸 用于判断 // let size = (fileLength / 1024).toFixed(2) // 上传拍照信息 调用接口上传图片 ......... // 保存到本地 // let ADOM = document.createElement(&apos;a&apos;) // ADOM.href = this.headImgSrc // ADOM.download = new Date().getTime() + &apos;.jpeg&apos; // ADOM.click() // 上传到七牛云 var imgName = &apos;image/face/&apos; + new Date().getTime() + Math.floor(Math.random() * 100) + &apos;.jpg&apos; imgName = btoa(imgName) // 自定义key let url = 地址 + &apos;/putb64/-1/key/&apos; + imgName let xhr = new XMLHttpRequest() let photoUrl = &apos;&apos; xhr.open(&apos;POST&apos;, url, true) xhr.setRequestHeader(&apos;Content-Type&apos;, &apos;application/octet-stream&apos;) // 此处token是调用七牛云返回的token令牌 xhr.setRequestHeader(&apos;Authorization&apos;, &apos;UpToken &apos; + this.token ) xhr.send(str) let that = this xhr.onreadystatechange = function () { if (xhr.readyState === 4) { let json3 = JSON.parse(xhr.responseText) photoUrl = that.uploadUrl + json3.key console.log(photoUrl) // data.key就是key，图片地址在路径key里 // 这里则是需要将七牛云返回的地址传给后端,numId则是项目中需要的标识不需在意 sendPhoto({ imageUrl: photoUrl, numId: that.numId }).then(res =&gt; { // console.log(res) if (res.code === 0) { // this.$emit(&apos;toVideo&apos;) that.closeCamera() that.isPhotoOk = false } else { that.$message({ type: &apos;error&apos;, message: &apos;上传照片失败,请重试&apos; }) return false } }) } // else { // that.$message(&apos;上传照片失败,请重试&apos;) // } } // 关闭摄像头 closeCamera () { if (!this.$refs[&apos;video&apos;].srcObject) return let stream = this.$refs[&apos;video&apos;].srcObject let tracks = stream.getTracks() tracks.forEach(track =&gt; { track.stop() }) this.$refs[&apos;video&apos;].srcObject = null }css部分 &lt;style lang=&quot;scss&quot; scoped&gt; .header { width: 100%; display: flex; align-items: center; .title { font-size: 20px; margin-left: 20px; } } .content { width: 90%; height: 760px; display: flex; justify-content: space-between; margin: 20px auto 0; .video { width: 69%; height: 100%; background-color: #000; video { width: 100%; height: 100%; margin: auto; } } .catalogue { width: 30%; height: 100%; padding: 0 20px; box-sizing: border-box; background-color: #f2f2f2; .title { height: 40px; line-height: 40px; margin-top: 10px; margin-bottom: 10px; font-size: 20px; border-bottom: 1px solid #ccc; } ul { font-size: 16px; line-height: 30px; height: 690px; overflow-y: auto; li { display: flex; justify-content: space-between; span { &amp;:last-of-type { color: #0000FE; &amp;:hover { cursor: pointer; } } } } } } } .contentPhoto { width: 100%; height: 600px; canvas { position: absolute; top: 50px; left: 50%; transform: translateX(-50%); } video { position: absolute; top: 50px; left: 50%; transform: translateX(-50%); object-fit: fill; &amp;.isPhoto { z-index: -1; } } .sub-btn { position: absolute; top: 660px; left: 50%; transform: translateX(-50%); } } &lt;/style&gt;其中可能部分没有写完整,但是核心代码都在这上面了==","categories":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[],"author":"yolico"},{"title":"vue组件传值","slug":"vue组件传值","date":"2020-04-23T06:48:05.000Z","updated":"2020-05-02T08:35:01.601Z","comments":true,"path":"2020/04/23/vue组件传值/","link":"","permalink":"http://yoursite.com/2020/04/23/vue%E7%BB%84%E4%BB%B6%E4%BC%A0%E5%80%BC/","excerpt":"","text":"我们一般经常见到的组件传值方式除了props,$emit,订阅发布模式,vuex以外还有一些其他我们不常用到的方式 1 父向子传值 props父亲 &lt;zujian titile=&quot;&quot; :id=&quot;&apos;xxx&apos;&quot; .. 儿子 props: {title: String, id: {type: Number, default: 1}}或props: [&apos;title&apos;, &apos;id&apos;] 推荐props: {}这种方式接受属性 可以对接受的值进行数据校验2 子向父传值（父亲像儿子传递一个函数 儿子调用同时传递参数或发布订阅模式）父亲 &lt;zujian v-on:约定名字=&quot;函数&quot; 在methods中定义回调函数 形参就是子组件传递过来的值 儿子 this.$emit(约定名字, 实参)3 事件中心 (非父子)创建事件中心 var bus = new Vue() 通过事件中心订阅 bus.$on(&apos;公众号id&apos;, (v) =&gt; { // v形参}) // 接收数据 通过事件中心发布 bus.$emit(&apos;公众号id&apos;, 实参消息) // 发射数据4 vuexVuex实现了一个单向数据流，在全局拥有一个State存放数据，当组件要更改State中的数据时，必须通过Mutation进行，Mutation同时提供了订阅者模式供外部插件调用获取State数据的更新。而当所有异步操作(常见于调用后端接口异步获取更新数据)或批量的同步操作需要走Action，但Action也是无法直接修改State的，还是需要通过Mutation来修改State的数据。最后，根据State的变化，渲染到视图上。 各模块在流程中的功能： Vue Components：Vue组件。HTML页面上，负责接收用户操作等交互行为，执行dispatch方法触发对应action进行回应。 dispatch：操作行为触发方法，是唯一能执行action的方法。 actions：操作行为处理模块,由组件中的$store.dispatch(‘action 名称’, data1)来触发。然后由commit()来触发mutation的调用 , 间接更新 state。负责处理Vue Components接收到的所有交互行为。包含同步/异步操作，支持多个同名方法，按照注册的顺序依次触发。向后台API请求的操作就在这个模块中进行，包括触发其他action以及提交mutation的操作。该模块提供了Promise的封装，以支持action的链式触发。 commit：状态改变提交操作方法。对mutation进行提交，是唯一能执行mutation的方法。 mutations：状态改变操作方法，由actions中的commit(‘mutation 名称’)来触发。是Vuex修改state的唯一推荐方法。该方法只能进行同步操作，且方法名只能全局唯一。操作之中会有一些hook暴露出来，以进行state的监控等。 state：页面状态管理容器对象。集中存储Vue components中data对象的零散数据，全局唯一，以进行统一的状态管理。页面显示所需的数据从该对象中进行读取，利用Vue的细粒度数据响应机制来进行高效的状态更新。 getters：state对象读取方法。图中没有单独列出该模块，应该被包含在了render中，Vue Components通过该方法读取全局state对象。 5 $attrs/$listeners (A嵌套B组件 B组件又嵌套C组件 A组件传递属性给C组件)v-bind=”$attrs” //可以通过$attrs把接受到的属性继续往下传递v-on=”$listeners” //可以通过$listeners把事件传递下去 &lt;div id=&quot;app&quot;&gt; &lt;!-- A嵌套B组件 B组件又嵌套C组件 --&gt; &lt;a-component&gt;&lt;/a-component&gt; &lt;/div&gt; &lt;script&gt; // a组件 Vue.component(&apos;a-component&apos;, { data() { return { message: `我是a组件` } }, template: `&lt;div&gt; 我是A组件 &lt;b-component name=&quot;三毛&quot; :tob=&quot;message&quot; v-on:aa=&quot;aHandler&quot;&gt;&lt;/b-component&gt; &lt;/div&gt;`, methods: { aHandler (v) { console.log(v, &apos;C组件给A组件传值了&apos;) } } }) // b组件 Vue.component(&apos;b-component&apos;, { props: [&apos;name&apos;], // 如果想让属性传递下去这里不能通过props接受 template: `&lt;div&gt; 我是B组件-- &lt;c-component v-bind=&quot;$attrs&quot; v-on=&quot;$listeners&quot;&gt;&lt;/c-component&gt; &lt;/div&gt;` }) // c组件 Vue.component(&apos;c-component&apos;, { template: `&lt;div&gt;我是C组件--{{$attrs}}--&lt;button @click=&quot;$emit(&apos;aa&apos;, &apos;cccc&apos;)&quot;&gt; 给A组件传值&lt;/button&gt;&lt;/div&gt;` }) var vm = new Vue({ el: &apos;#app&apos; }) &lt;/script&gt;6 provide inject (后代传值)通过provide 注入原始数据 (用法基本和data是一致的)通过inject接受 (和props用法基本上是一一致) 组件a provide () { return { P: this.a // 通过获取自己data中数据然后将其注入给后代 } } 组件b inject: [&apos;P&apos;], template: `&lt;div&gt; 我是B组件--{{P}} &lt;c-component&gt;&lt;/c-component&gt; &lt;/div&gt;` 组件c inject: [&apos;P&apos;], template: `&lt;div&gt;我是C组件--{{P}}&lt;/div&gt;`7 $parent和$children (访问父 / 子实例)这种事通过访问实例,然后访问属性的方式,所以,当你只想要其中的属性值时,这种方式就会造成浪费了 &lt;div id=&quot;app&quot;&gt; &lt;!-- A嵌套B组件 B组件又嵌套C组件, --&gt; &lt;a-component&gt;&lt;/a-component&gt; &lt;/div&gt; // c组件 Vue.component(&apos;c-component&apos;, { data() { return { cc: &apos;这是c组件数据&apos; } }, template: `&lt;div&gt;我是C组件--&lt;button @click=&quot;getRootValue&quot;&gt;获取vm属性值&lt;/button&gt;&lt;/div&gt;`, methods: { getRootValue () { // console.log(this.$parent.$parent.$parent.message) // 这里快速的获取了 console.log(this.$root.message) // 这里快速的获取了 } }, var vm = new Vue({ data: { message: &apos;abc&apos; }, el: &apos;#app&apos;, // 这里比如我想在获取子组件数据 mounted() { // 这里不一定生命周期 点击的都可以 // console.log(this.$children) // 获取子组件集合 // console.log(this.$children[0].$children[0].$children[0]) // 获取C组件 console.log(this.$children[0].$children[0].$children[0].cc) // 获取C组件 } }) 8 $refs/ref&lt;div id=&quot;app&quot;&gt; &lt;!-- A嵌套B组件 B组件又嵌套C组件 --&gt; &lt;a-component ref=&quot;myRefA&quot;&gt;&lt;/a-component&gt; &lt;hr&gt; &lt;c-component ref=&quot;myRefC&quot;&gt;&lt;/c-component&gt; &lt;/div&gt; // a,b组件同上 c组件 data() { return { cc: &apos;数据c&apos; } }, var vm = new Vue({ el: &apos;#app&apos;, mounted () { console.log(this.$refs.myRefC) // 这种方式可以获页面中的额dom或组件 console.log(this.$refs.myRefC.cc) // 获取组件中的属性 } })总结常见使用场景可以分为三类： 父子通信： 父向子传递数据是通过 props，子向父是通过 events（$emit）； 通过父链 / 子链也可以通信（$parent / $children）； ref 也可以访问组件实例； provide / inject； $attrs/$listeners 兄弟通信： Bus；Vuex 跨级通信： Bus；Vuex；provide / inject; $attrs/$listeners","categories":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"悦读","slug":"悦读","permalink":"http://yoursite.com/tags/%E6%82%A6%E8%AF%BB/"}],"author":"yolico"},{"title":"H5路由","slug":"H5路由","date":"2020-04-20T08:48:19.000Z","updated":"2020-05-02T07:40:18.498Z","comments":true,"path":"2020/04/20/H5路由/","link":"","permalink":"http://yoursite.com/2020/04/20/H5%E8%B7%AF%E7%94%B1/","excerpt":"","text":"H5 路由的两种实现hash模式如果a标签的href属性以”#”开头，那么当点击这个a标签时就会触发hashchange事件，在该事件处理函数中可以做很多事，比如发ajax请求，进行DOM操作替换页面等。 &lt;body&gt; &lt;a href=&quot;#/first&quot;&gt;跳转到第一个页面&lt;/a&gt; &lt;a href=&quot;#/secend&quot;&gt;跳转到第二个页面&lt;/a&gt; &lt;div class=&quot;content&quot;&gt; &lt;/div&gt; &lt;script&gt; function $ (ele) {return document.querySelector(ele)} // 通过window.onhashchange来获取路由变化 window.onhashchange = () =&gt; { // 可以通过location.hash拿到hash值 let url = location.hash.slice(1) console.log(url) switch (url) { case &apos;/first&apos;: $(&apos;.content&apos;).innerHTML = &apos;&lt;h1&gt;这是第一个页面&lt;/h1&gt;&apos; break; case &apos;/secend&apos;: $(&apos;.content&apos;).innerHTML = &apos;&lt;h1&gt;这是第二个页面&lt;/h1&gt;&apos; break; default: $(&apos;.content&apos;).innerHTML = &apos;&lt;h1&gt;默认&lt;/h1&gt;&apos; break; } } &lt;/script&gt; &lt;/body&gt; history模式hisroty模式相比hash模式，是一种比较新的路由模式原理就是利用history.pushState(state,null,url)更新浏览器url地址，这会触发 popstate 事件 &lt;body&gt; &lt;a href=&quot;#1&quot;&gt;first&lt;/a&gt; &lt;a href=&quot;#2&quot;&gt;secend&lt;/a&gt; &lt;div id=&quot;content&quot;&gt;&lt;/div&gt; &lt;script type=&apos;text/js-template&apos; class=&quot;test&quot; id=&quot;1&quot;&gt;第一页&lt;/script&gt; &lt;script type=&apos;text/js-template&apos; class=&quot;test&quot; id=&quot;2&quot;&gt;第二页&lt;/script&gt; &lt;script type=&quot;text/javascript&quot;&gt; //1、获取元素 let aElm=document.getElementsByTagName(&apos;a&apos;); let array=[].slice.call(aElm) let content=document.getElementById(&apos;content&apos;) //2、特性检测，如果支持history模式就用history，否则用hash模式 if (history&amp;&amp;history.pushState) { window.addEventListener(&apos;popstate&apos;,handlePage); //劫持a元素的click事件，主要是为了更新history.state的状态以及 //替换url，当点击url跳转时先执行onclick再触发popstate array.forEach(function(v){ v.onclick=function(event){ var path=event.target.hash.split(&quot;#&quot;)[1]; var newUrl=location.href.split(&apos;#&apos;)[0]+&apos;\\/&apos;+path; history.pushState({current:path},null,newUrl) } }) } else { window.addEventListener(&apos;hashchange&apos;,handlePage); } //3、统一使用handlePage作为两种模式的事件处理器 function handlePage(){ if (history&amp;&amp;history.pushState) { var current=history.state&amp;&amp;history.state.current||&apos;1&apos;; render(current) } else { var hash=location.hash||&apos;#1&apos;; render(hash,true) } function render(selector,isHashMode){ var hashMode=isHashMode&amp;&amp;true; var select=&apos;&apos;; if (hashMode) { select=selector.split(&apos;#&apos;)[1]; } else { select=selector||history.state.current } var toPage=document.getElementById(select); content.innerHTML=toPage.innerHTML; } } handlePage(); &lt;/script&gt; &lt;/body&gt;pushState的第三个参数url是不能跨域的纯粹的用JS调用pushState并不能触发popstate事件，只有浏览器的前进返回或者用户点击页面操作才能触发popstate。若想监听到所有的 pushState，则可以采用自定义事件的方法： //创建全局事件 var _wr = function(type) { var orig = history[type]; return function() { var rv = orig.apply(this, arguments); var e = new Event(type); e.arguments = arguments; window.dispatchEvent(e); return rv; }; }; //重写方法 history.pushState = _wr(&apos;pushState&apos;); history.replaceState = _wr(&apos;replaceState&apos;); //实现监听 window.addEventListener(&apos;replaceState&apos;, function(e) { console.log(&apos;THEY DID IT AGAIN! replaceState 111111&apos;); }); window.addEventListener(&apos;pushState&apos;, function(e) { console.log(&apos;THEY DID IT AGAIN! pushState 2222222&apos;); });注意history 模式刷新页面无效问题(webpack设置 publicPath 必须为绝对路径才行) location /{ index index.html index.htm; if (!-e $request_filename) { rewrite ^/(.*) /index.html last; break; } }部分转载://www.jianshu.com/p/c9de1924d215来源：简书","categories":[{"name":"转载","slug":"转载","permalink":"http://yoursite.com/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"web","slug":"web","permalink":"http://yoursite.com/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"http://yoursite.com/tags/%E6%82%A6%E8%AF%BB/"}],"author":"yolico"}],"categories":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"},{"name":"转载","slug":"转载","permalink":"http://yoursite.com/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"悦读","slug":"悦读","permalink":"http://yoursite.com/tags/%E6%82%A6%E8%AF%BB/"},{"name":"web","slug":"web","permalink":"http://yoursite.com/tags/web/"}]}